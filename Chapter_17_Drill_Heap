#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
#include<cmath>
#include<fstream>
#include<sstream>


using namespace std;

/*
* These is the drill from Chapter 17.
* For the Free store with vectors:
* 1: Allocate an array of ten ints on the free store using new.
* 2: Print the values of the ten ints to cout.
* 3: Deallocate the array using delete.
* 4: Write a function print_array10(ostream& os, int* a) that prints our the values of a (assumed to have ten elements) to os.
* 5: Allocate an array of ten ints on the free store; initialize it with the values 100, 101, 102, etc; and print out its values.
* 6: Allocate an array of 11 ints on the free store; initialize it with the values 100,101,102 etc and print out its values.
* 7: Write a function print_array(ostream& os, int* a, int n) that prints out the values of a (assumed to have n elements) to s.
* 8: Allocate an array of 20 ints on the free store; initialize it with the values 100, 101, 102, etc.; and print out the values.
* 9: Did you remember to delete the arrays, if not, do so:
* 10: Do 5, 6 and 8, using vector instead of an array and print_vector() instead of print_array().
* 
* Pointers and their relations to arrays
* 1: allocate an int, initialize it to 7, and assign its address to a variable p1.
* 2: Print out the value of p1 and of the int it points to.
* 3: Allocate an array of seven ints, initialize it to 1,2,4,8 etc.; and assign its address to a variable p2.
* 4: Print out the value of p2 and of the array that it points to.
* 5: Declare an int* called p3 and initialize it with p2.
* 6: Assign p1 to p2.
* 7: Assign p3 to p2.
* 8: Print out the values of p1 and p2 and of thwa the point to.
* 9: Deallocate all the memory you allocated from the free store.
* 10: Allocate an array of 10 ints, initialize it to 1,2,4,8,10,12,14,16,18 and assign it address to variable p1.
* 11: Allocate an array of 10 ints and assign its address to a variable p2.
* 12: Copy the values from the array pointed to by p1 into the array pointed to by p2.
* 12:Repeat steps 10-12 using a vector rather than an array.
*/

//4:
void print_array10(ostream& os, int* a) {
	for (int i = 0; i < 10; i++) {
		os << a[i] << " ";
	}
	os << endl;
}

//7:
void print_array(ostream& os, int* a, int n) {
	for (int i = 0; i < n; i++) {
		os << a[i] << " ";
	}
	os << endl;
}

void print_vector(ostream& os, vector<int>* a) {
	for (int i = 0; i < a->size(); i++) {
		os<<a->at(i) << " ";
	}

	os << endl;
}


int main() {

	//1:
	int* array1 = new int[10];

	//2:
	for (int i = 0; i < 10; i++) {
		cout << array1[i] << endl;
	}

	//3:
	delete[] array1;

	//5: 
	int* array10 = new int[10] {100,101,102,103,104,105,106,107,108,109};

	print_array10(cout, array10);

	//6:
	int* array11 = new int[11] {100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110};
	
	print_array10(cout, array11); //Note, will not print the last one.

	//8
	int* array20 = new int[20] {100, 101, 102, 203, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119};

	print_array(cout, array20, 20);

	delete[] array10;
	delete[] array11;
	delete[] array20;

	//10:
	vector<int>* vector10 = new vector<int>{100, 101, 102, 103, 104, 105, 106, 107, 108, 109};
	vector<int>* vector11 = new vector<int>{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110};
	vector<int>* vector20 = new vector<int>{100, 101, 102, 203, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119};

	print_vector(cout, vector10);
	print_vector(cout, vector11);
	print_vector(cout, vector20);

	delete vector10;
	delete vector11;
	delete vector20;

	//POINTERS AND THEIR RELATIONS TO ARRAYS SECTION

	//1:
	int int1 = 7;
	int* p1 = &int1;

	//2
	cout << "p1 value " << p1 << " The value p1 points to: " << *p1 << endl;

	//3
	int* array7 = new int[7] {1, 2, 4, 6, 8, 10, 11};
	int* p2 = array7;

	//4
	cout << "Here is the address: " << p2 << endl;
	print_array(cout, array7,7);

	//5
	int* p3 = p2;
	
	//6
	p1 = p2;

	//7
	p3 = p2;

	cout << "Points to: " << p3 << endl;
	print_array(cout, p3, 7);

	cout << "Points to: " << p2 << endl;
	print_array(cout, p2, 7);

	delete[] array7;

	//10
	int* array50 = new int[10] {1, 2, 4, 6, 8, 10, 12, 14, 16, 18};
	p1 = array50;

	//11
	int* array60 = new int[10];
	p2 = array60;

	p2 = p1;

	print_array(cout, p2, 10);

	//13
	vector<int>* vector100 = new vector<int>{ 1,2,4,6,8,10,12,14,16,18};
	vector<int>* p100 = vector100;

	vector<int>* vector200 = new vector<int>;
	vector<int>* p200 = vector200;

	p200 = p100;

	print_vector(cout, p200);
   
	return 0;
}
